---
# tasks file for apache1
  - name: copy sources.list
    template:
      src   : sources.list.j2
      dest  : /etc/apt/sources.list
      owner : root
      group : root
      mode  : '0644'
      backup: yes

  - name: install a list of basic packages plus apache2
    apt:
      pkg:
      - apache2
      - mc
      - nfs-kernel-server
      - telnet
      - tree
      - cifs-utils
      - tcpdump
      - sudo
      - wget
      - curl
      - gnupg2
      - zip
      update_cache: yes
#      - prometheus-node-exporter

  - name: add line 1 to /etc/hosts
    ansible.builtin.lineinfile:
      path   : /etc/hosts
      line   : '####### add to all hostfiles #######'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: add line 2 to /etc/hosts
    ansible.builtin.lineinfile:
      path   : /etc/hosts
      line   : '{{ backup }}	backup.{{ domain }}	#Backup'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: add line 3 to /etc/hosts
    ansible.builtin.lineinfile:
      path   : /etc/hosts
      line   : '{{ nginx }}	nginx.{{ domain }}		#Nginx'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: add line 4 to /etc/hosts
    ansible.builtin.lineinfile:
      path   : /etc/hosts
      line   : '{{ apache1 }}	apache1.{{ domain }}		#Apache 1'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: add line 5 to /etc/hosts
    ansible.builtin.lineinfile:
      path   : /etc/hosts
      line   : '{{ apache2 }}	apache2.{{ domain }}		#Apache 2'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: add line 6 to /etc/hosts
    ansible.builtin.lineinfile:
      path   : /etc/hosts
      line   : '{{ mysqlsrs }}	mysqlsrs.{{ domain }}	#MySQL source'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: add line 7 to /etc/hosts
    ansible.builtin.lineinfile:
      path   : /etc/hosts
      line   : '{{ mysqlrep }}	mysqlrep.{{ domain }}	#MySQL replica'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: add line 8 to /etc/hosts
    ansible.builtin.lineinfile:
      path   : /etc/hosts
      line   : '{{ monitor }}	monitor.{{ domain }}		#Monitoring'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: add line 9 to /etc/hosts
    ansible.builtin.lineinfile:
      path   : /etc/hosts
      line   : '{{ elk }}	elk.{{ domain }}		#ELK stack'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: add line 10 to /etc/hosts
    ansible.builtin.lineinfile:
      path   : /etc/hosts
      line   : '###########################'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: Download Zabbix repo package
    get_url:
      url: "https://repo.zabbix.com/zabbix/7.2/release/debian/pool/main/z/zabbix-release/zabbix-release_latest_7.2+debian12_all.deb"
      dest: "/tmp/zabbix-release_latest_7.2+debian12_all.deb"

  - name: Install Zabbix repo package
    apt:
      deb: "/tmp/zabbix-release_latest_7.2+debian12_all.deb"
      
  - name: Zabbix agent 2 install - install 7.2 latest agent
    apt:
      pkg:
      - zabbix-agent2
      update_cache: yes

  - name: make zabbix_agent2.conf from template
    template: 
      src: zabbix_agent2.conf.j2
      dest: /etc/zabbix/zabbix_agent2.conf
      owner: root
      group: root
      mode: '644'

  - name: make zabbix_agentd.psk from template
    template: 
      src: zabbix_agentd.psk.j2
      dest: /etc/zabbix/zabbix_agentd.psk
      owner: zabbix
      group: zabbix
      mode: '400'
  
  - name: restart Zabbix agent 2
    systemd:
      unit: zabbix-agent2.service
      state: restarted
      enabled: yes
      daemon_reload: yes

  - name: create a directory www if it does not exist /www
    ansible.builtin.file:
      path   : /www
      state  : directory
      mode   : '0777'

  - name: Add line NFS /www to /etc/fstab
    ansible.builtin.lineinfile:
      path   : /etc/fstab
      line   : 'backup.{{ domain }}:/www                          /www        nfs   rw        0  0'
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: Execute command mount /www
    shell: 
      cmd: "systemctl daemon-reload && mount -a"

  - name: copy open rsa key for Apache2
    copy: 
      src: "../../files/fullchain.pem"
      dest: /etc/ssl/certs/fullchain.pem
      owner: root
      group: root
      mode: '600'

  - name: copy private rsa key for Apache2
    copy: 
      src: "../../files/cert.key"
      dest: /etc/ssl/private/cert.key
      owner: root
      group: root
      mode: '600'

  - name: copy apache2 config 1
    template:
      src   : apache2.conf.j2
      dest  : /etc/apache2/apache2.conf
      owner : root
      group : root
      mode  : '0644'
      backup: yes

  - name: copy apache2 config 2
    template:
      src   : 000-default.conf.j2
      dest  : /etc/apache2/sites-available/000-default.conf
      owner : root
      group : root
      mode  : '0644'
      backup: yes

  - name: copy apache2 config 3
    template:
      src   : 000-default-ssl.conf.j2
      dest  : /etc/apache2/sites-available/000-default-ssl.conf
      owner : root
      group : root
      mode  : '0644'
      backup: yes

  - name: Enable SSL module in Apache
    command: a2enmod ssl
    args:
      creates: /etc/apache2/mods-enabled/ssl.load

  - name: Enable default SSL site
    command: a2ensite 000-default-ssl.conf
    args:
      creates: /etc/apache2/sites-enabled/000-default-ssl.conf

  - name: restart apache2
    systemd:
      unit: apache2
      state: restarted
      enabled: yes
      daemon_reload: yes

  - name: install PHP packages for Wordpress
    apt:
      pkg:
      - php8.2
      - php8.2-cli
      - php8.2-common
      - php8.2-imap
      - php8.2-redis
      - php8.2-snmp
      - php8.2-xml
      - php8.2-mysqli
      - php8.2-zip
      - php8.2-mbstring
      - php8.2-curl
      - libapache2-mod-php
      update_cache: no

  - name: Ensure /install_tmp directory exists
    file:
      path: /install_tmp
      state: directory
      mode: '0755'
      owner: root
      group: root  

  - name: Check file exists /install_tmp/filebeat_8.9.1_amd64.deb
    stat:
      path: /install_tmp/filebeat_8.9.1_amd64.deb
    register: filebeat_deb

  - name: Downloading filebeat_8.9.1_amd64.deb
    get_url:
      url: https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-8.9.1-amd64.deb
      dest: /install_tmp/filebeat_8.9.1_amd64.deb
      mode: '0644'
    when: not filebeat_deb.stat.exists

  - name: install Filebeat for NGINX
    apt:
      deb: /install_tmp/filebeat_8.9.1_amd64.deb

  - name: rm filebeat_8.9.1_amd64.deb file after install
    file:
      path: /install_tmp/filebeat_8.9.1_amd64.deb
      state: absent

  - name: transfer config for Filebeat
    template: 
      src: filebeat.yml.j2
      dest: /etc/filebeat/filebeat.yml
      owner: root
      group: root
      mode: '600'

  - name: restart Filebeat
    systemd:
      unit: filebeat.service
      state: restarted
      enabled: yes
      daemon_reload: yes

  - name: rm temp install directory /install_tmp
    file:
      path: /install_tmp
      state: absent
...